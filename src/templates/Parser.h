/* 
 * Generated by construct-c (c) 2023 Alexander Kraus <nr4@z10.info>.
 * Generation timestamp: {{ info.now }}
 * Note: If you plan to edit this file, please reconsider your plan.
 */

#ifndef {{ info.nameUpperCase }}_H
#define {{ info.nameUpperCase }}_H

#include <stdint.h>

#define {{ info.nameUpperCase }}_SIZE {{ info.size }}
{% for renamed in info.structStack %}
typedef struct {
    {%- for subcon in renamed.subcons %}
    {{ generatorService.cType(subcon) }} {{ subcon.name }};
    {%- endfor %}
} {{ renamed.name }}_t;
{% endfor %}

{%- if info.needsMalloc %}
#include <stdlib.h>

// Allocation-related forward declarations. 
{{ info.nameSnakeCase }}_t *{{ info.nameSnakeCase }}_create(void);
void {{ info.nameSnakeCase }}_destroy({{ info.nameSnakeCase }}_t *instance);
{%- endif %}

#ifdef {{ info.nameUpperCase }}_PARSER
#include <stdbool.h>
// Parser-related forward declarations.
bool parse_{{ info.nameSnakeCase }}({{ info.nameSnakeCase }}_t *instance, uint8_t *source);
#endif /* {{ info.nameUpperCase }}_PARSER */

#ifdef {{ info.nameUpperCase }}_SERIALIZER
// Serializer-related forward declarations
void serialize_{{ info.nameSnakeCase }}({{ info.nameSnakeCase }}_t *instance, uint8_t *target);
#endif /* {{ info.nameUpperCase }}_SERIALIZER */

#ifdef {{ info.nameUpperCase }}_PRINTER
#include <stdio.h>
// Printer-related forward declarations.
void dump_{{ info.nameSnakeCase }}({{ info.nameSnakeCase}}_t *instance);
#endif /* {{ info.nameUpperCase }}_PRINTER */

#ifdef {{ info.nameUpperCase }}_HEADER_ONLY
#include "{{ info.baseName }}.c"
#endif /* {{ info.nameUpperCase }}_HEADER_ONLY*/

#endif /* {{ info.nameUpperCase }}_H */
